export declare const createTablesSQL = "\n-- Enable PostGIS extension\nCREATE EXTENSION IF NOT EXISTS postgis;\nCREATE EXTENSION IF NOT EXISTS \"uuid-ossp\";\n\n-- Users and Authentication\nCREATE TABLE IF NOT EXISTS users (\n    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),\n    email VARCHAR(255) UNIQUE NOT NULL,\n    password_hash VARCHAR(255) NOT NULL,\n    name VARCHAR(255) NOT NULL,\n    role VARCHAR(50) NOT NULL DEFAULT 'operator' CHECK (role IN ('admin', 'manager', 'operator')),\n    company_id UUID,\n    active BOOLEAN DEFAULT true,\n    last_login TIMESTAMP,\n    created_at TIMESTAMP DEFAULT NOW(),\n    updated_at TIMESTAMP DEFAULT NOW()\n);\n\n-- Companies/Organizations\nCREATE TABLE IF NOT EXISTS companies (\n    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),\n    name VARCHAR(255) NOT NULL,\n    address TEXT,\n    phone VARCHAR(50),\n    email VARCHAR(255),\n    business_license VARCHAR(255),\n    settings JSONB DEFAULT '{}',\n    created_at TIMESTAMP DEFAULT NOW(),\n    updated_at TIMESTAMP DEFAULT NOW()\n);\n\n-- Employees Management\nCREATE TABLE IF NOT EXISTS employees (\n    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),\n    company_id UUID REFERENCES companies(id) ON DELETE CASCADE,\n    user_id UUID REFERENCES users(id) ON DELETE SET NULL,\n    employee_number VARCHAR(50),\n    name VARCHAR(255) NOT NULL,\n    position VARCHAR(100),\n    hire_date DATE,\n    hourly_rate DECIMAL(10,2),\n    status VARCHAR(50) DEFAULT 'active' CHECK (status IN ('active', 'inactive', 'terminated')),\n    phone VARCHAR(50),\n    email VARCHAR(255),\n    address TEXT,\n    emergency_contact JSONB,\n    performance_data JSONB DEFAULT '{}',\n    created_at TIMESTAMP DEFAULT NOW(),\n    updated_at TIMESTAMP DEFAULT NOW()\n);\n\n-- Vehicles and Equipment\nCREATE TABLE IF NOT EXISTS vehicles (\n    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),\n    company_id UUID REFERENCES companies(id) ON DELETE CASCADE,\n    name VARCHAR(255) NOT NULL,\n    type VARCHAR(100), -- truck, trailer, equipment\n    make VARCHAR(100),\n    model VARCHAR(100),\n    year INTEGER,\n    vin VARCHAR(50),\n    license_plate VARCHAR(20),\n    registration_expires DATE,\n    insurance_expires DATE,\n    current_mileage DECIMAL(10,2),\n    fuel_capacity DECIMAL(10,2),\n    gvwr DECIMAL(10,2), -- Gross Vehicle Weight Rating\n    curb_weight DECIMAL(10,2),\n    specifications JSONB DEFAULT '{}',\n    maintenance_log JSONB DEFAULT '[]',\n    status VARCHAR(50) DEFAULT 'active' CHECK (status IN ('active', 'maintenance', 'inactive')),\n    created_at TIMESTAMP DEFAULT NOW(),\n    updated_at TIMESTAMP DEFAULT NOW()\n);\n\n-- Equipment (tools, machines, etc.)\nCREATE TABLE IF NOT EXISTS equipment (\n    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),\n    company_id UUID REFERENCES companies(id) ON DELETE CASCADE,\n    vehicle_id UUID REFERENCES vehicles(id) ON DELETE SET NULL,\n    name VARCHAR(255) NOT NULL,\n    type VARCHAR(100), -- sealcoating_tank, crack_machine, blower, etc.\n    make VARCHAR(100),\n    model VARCHAR(100),\n    serial_number VARCHAR(100),\n    capacity DECIMAL(10,2),\n    weight DECIMAL(10,2),\n    specifications JSONB DEFAULT '{}',\n    maintenance_schedule JSONB DEFAULT '{}',\n    usage_hours DECIMAL(10,2) DEFAULT 0,\n    status VARCHAR(50) DEFAULT 'active' CHECK (status IN ('active', 'maintenance', 'inactive')),\n    created_at TIMESTAMP DEFAULT NOW(),\n    updated_at TIMESTAMP DEFAULT NOW()\n);\n\n-- Materials and Supplies\nCREATE TABLE IF NOT EXISTS materials (\n    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),\n    company_id UUID REFERENCES companies(id) ON DELETE CASCADE,\n    name VARCHAR(255) NOT NULL,\n    category VARCHAR(100), -- sealer, sand, crack_filler, etc.\n    supplier VARCHAR(255),\n    unit_type VARCHAR(50), -- gallon, bag, box, tank\n    current_cost DECIMAL(10,2),\n    last_cost_update TIMESTAMP,\n    specifications JSONB DEFAULT '{}',\n    mixing_ratios JSONB DEFAULT '{}',\n    coverage_rates JSONB DEFAULT '{}',\n    created_at TIMESTAMP DEFAULT NOW(),\n    updated_at TIMESTAMP DEFAULT NOW()\n);\n\n-- Inventory tracking\nCREATE TABLE IF NOT EXISTS inventory (\n    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),\n    company_id UUID REFERENCES companies(id) ON DELETE CASCADE,\n    material_id UUID REFERENCES materials(id) ON DELETE CASCADE,\n    current_stock DECIMAL(10,2) DEFAULT 0,\n    minimum_stock DECIMAL(10,2) DEFAULT 0,\n    location VARCHAR(255),\n    last_restocked TIMESTAMP,\n    created_at TIMESTAMP DEFAULT NOW(),\n    updated_at TIMESTAMP DEFAULT NOW()\n);\n\n-- GPS Tracking and Location Data\nCREATE TABLE IF NOT EXISTS location_tracking (\n    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),\n    company_id UUID REFERENCES companies(id) ON DELETE CASCADE,\n    employee_id UUID REFERENCES employees(id) ON DELETE CASCADE,\n    vehicle_id UUID REFERENCES vehicles(id) ON DELETE SET NULL,\n    location GEOGRAPHY(POINT, 4326) NOT NULL,\n    accuracy DECIMAL(10,2),\n    speed DECIMAL(5,2),\n    heading DECIMAL(5,2),\n    activity VARCHAR(50), -- driving, walking, stationary, work\n    battery_level INTEGER,\n    timestamp TIMESTAMP DEFAULT NOW(),\n    created_at TIMESTAMP DEFAULT NOW()\n);\n\n-- Geofences for job sites and boundaries\nCREATE TABLE IF NOT EXISTS geofences (\n    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),\n    company_id UUID REFERENCES companies(id) ON DELETE CASCADE,\n    name VARCHAR(255) NOT NULL,\n    type VARCHAR(50) DEFAULT 'work_site', -- work_site, office, supplier, restricted\n    boundary GEOGRAPHY(POLYGON, 4326) NOT NULL,\n    radius DECIMAL(10,2), -- for circular geofences\n    active BOOLEAN DEFAULT true,\n    settings JSONB DEFAULT '{}',\n    created_at TIMESTAMP DEFAULT NOW(),\n    updated_at TIMESTAMP DEFAULT NOW()\n);\n\n-- Time Tracking and Attendance\nCREATE TABLE IF NOT EXISTS time_entries (\n    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),\n    company_id UUID REFERENCES companies(id) ON DELETE CASCADE,\n    employee_id UUID REFERENCES employees(id) ON DELETE CASCADE,\n    clock_in TIMESTAMP NOT NULL,\n    clock_out TIMESTAMP,\n    clock_in_location GEOGRAPHY(POINT, 4326),\n    clock_out_location GEOGRAPHY(POINT, 4326),\n    total_hours DECIMAL(5,2),\n    break_time DECIMAL(5,2) DEFAULT 0,\n    overtime_hours DECIMAL(5,2) DEFAULT 0,\n    wage_rate DECIMAL(10,2),\n    status VARCHAR(50) DEFAULT 'active' CHECK (status IN ('active', 'completed', 'adjusted')),\n    notes TEXT,\n    auto_generated BOOLEAN DEFAULT false,\n    created_at TIMESTAMP DEFAULT NOW(),\n    updated_at TIMESTAMP DEFAULT NOW()\n);\n\n-- Cost Tracking\nCREATE TABLE IF NOT EXISTS cost_entries (\n    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),\n    company_id UUID REFERENCES companies(id) ON DELETE CASCADE,\n    employee_id UUID REFERENCES employees(id) ON DELETE SET NULL,\n    vehicle_id UUID REFERENCES vehicles(id) ON DELETE SET NULL,\n    category VARCHAR(100) NOT NULL, -- labor, materials, fuel, equipment\n    subcategory VARCHAR(100),\n    amount DECIMAL(10,2) NOT NULL,\n    quantity DECIMAL(10,2),\n    unit_cost DECIMAL(10,2),\n    description TEXT,\n    date DATE NOT NULL,\n    receipt_image TEXT, -- file path or URL\n    receipt_data JSONB, -- OCR extracted data\n    project_id UUID, -- for future project tracking\n    created_at TIMESTAMP DEFAULT NOW(),\n    updated_at TIMESTAMP DEFAULT NOW()\n);\n\n-- Weather Data\nCREATE TABLE IF NOT EXISTS weather_data (\n    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),\n    company_id UUID REFERENCES companies(id) ON DELETE CASCADE,\n    location GEOGRAPHY(POINT, 4326) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    temperature DECIMAL(5,2),\n    feels_like DECIMAL(5,2),\n    humidity INTEGER,\n    wind_speed DECIMAL(5,2),\n    wind_direction INTEGER,\n    pressure DECIMAL(8,2),\n    visibility DECIMAL(5,2),\n    uv_index DECIMAL(3,1),\n    conditions VARCHAR(100),\n    precipitation DECIMAL(5,2),\n    forecast_data JSONB,\n    source VARCHAR(100), -- API source\n    created_at TIMESTAMP DEFAULT NOW()\n);\n\n-- PavementScan Pro Data\nCREATE TABLE IF NOT EXISTS pavement_scans (\n    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),\n    company_id UUID REFERENCES companies(id) ON DELETE CASCADE,\n    employee_id UUID REFERENCES employees(id) ON DELETE SET NULL,\n    scan_location GEOGRAPHY(POINT, 4326) NOT NULL,\n    scan_area GEOGRAPHY(POLYGON, 4326),\n    total_area DECIMAL(10,2), -- square feet\n    perimeter_length DECIMAL(10,2), -- feet\n    scan_date TIMESTAMP DEFAULT NOW(),\n    device_info JSONB, -- camera, LiDAR, etc.\n    model_file_path TEXT, -- 3D model file location\n    status VARCHAR(50) DEFAULT 'processing' CHECK (status IN ('processing', 'completed', 'failed')),\n    created_at TIMESTAMP DEFAULT NOW(),\n    updated_at TIMESTAMP DEFAULT NOW()\n);\n\n-- Defect Detection Results\nCREATE TABLE IF NOT EXISTS defects (\n    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),\n    scan_id UUID REFERENCES pavement_scans(id) ON DELETE CASCADE,\n    defect_type VARCHAR(100) NOT NULL, -- crack, pothole, alligator, water_pooling\n    severity VARCHAR(50), -- low, medium, high, critical\n    location GEOGRAPHY(POINT, 4326) NOT NULL,\n    area GEOGRAPHY(POLYGON, 4326),\n    measurements JSONB, -- length, width, depth, area\n    confidence_score DECIMAL(3,2), -- AI confidence 0-1\n    visual_markers JSONB, -- color coding, highlighting data\n    repair_priority INTEGER DEFAULT 3, -- 1-5 scale\n    estimated_cost DECIMAL(10,2),\n    created_at TIMESTAMP DEFAULT NOW()\n);\n\n-- Reports and Documents\nCREATE TABLE IF NOT EXISTS reports (\n    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),\n    company_id UUID REFERENCES companies(id) ON DELETE CASCADE,\n    scan_id UUID REFERENCES pavement_scans(id) ON DELETE SET NULL,\n    employee_id UUID REFERENCES employees(id) ON DELETE SET NULL,\n    report_type VARCHAR(100) NOT NULL, -- pavement_analysis, cost_summary, daily_activity\n    title VARCHAR(255) NOT NULL,\n    file_path TEXT, -- PDF, PNG, DXF, GeoJSON\n    file_type VARCHAR(20),\n    file_size BIGINT,\n    metadata JSONB DEFAULT '{}',\n    generated_at TIMESTAMP DEFAULT NOW(),\n    created_at TIMESTAMP DEFAULT NOW()\n);\n\n-- Plugin Registry\nCREATE TABLE IF NOT EXISTS plugins (\n    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),\n    name VARCHAR(255) UNIQUE NOT NULL,\n    version VARCHAR(50) NOT NULL,\n    description TEXT,\n    author VARCHAR(255),\n    plugin_type VARCHAR(50) DEFAULT 'backend', -- backend, frontend, hybrid\n    file_path TEXT,\n    checksum VARCHAR(64),\n    signature TEXT,\n    permissions JSONB DEFAULT '[]',\n    dependencies JSONB DEFAULT '[]',\n    status VARCHAR(50) DEFAULT 'inactive' CHECK (status IN ('active', 'inactive', 'error')),\n    installed_at TIMESTAMP DEFAULT NOW(),\n    last_error TEXT,\n    created_at TIMESTAMP DEFAULT NOW(),\n    updated_at TIMESTAMP DEFAULT NOW()\n);\n\n-- System Settings and Configuration\nCREATE TABLE IF NOT EXISTS system_settings (\n    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),\n    company_id UUID REFERENCES companies(id) ON DELETE CASCADE,\n    setting_key VARCHAR(255) NOT NULL,\n    setting_value JSONB,\n    setting_type VARCHAR(50) DEFAULT 'general', -- general, security, integration\n    description TEXT,\n    created_at TIMESTAMP DEFAULT NOW(),\n    updated_at TIMESTAMP DEFAULT NOW(),\n    UNIQUE(company_id, setting_key)\n);\n\n-- Audit Log for Security and Compliance\nCREATE TABLE IF NOT EXISTS audit_log (\n    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),\n    company_id UUID REFERENCES companies(id) ON DELETE CASCADE,\n    user_id UUID REFERENCES users(id) ON DELETE SET NULL,\n    action VARCHAR(255) NOT NULL,\n    resource_type VARCHAR(100),\n    resource_id UUID,\n    old_values JSONB,\n    new_values JSONB,\n    ip_address INET,\n    user_agent TEXT,\n    timestamp TIMESTAMP DEFAULT NOW()\n);\n\n-- Indexes for Performance\nCREATE INDEX IF NOT EXISTS idx_users_email ON users(email);\nCREATE INDEX IF NOT EXISTS idx_users_company ON users(company_id);\nCREATE INDEX IF NOT EXISTS idx_employees_company ON employees(company_id);\nCREATE INDEX IF NOT EXISTS idx_vehicles_company ON vehicles(company_id);\nCREATE INDEX IF NOT EXISTS idx_location_tracking_employee ON location_tracking(employee_id);\nCREATE INDEX IF NOT EXISTS idx_location_tracking_timestamp ON location_tracking(timestamp);\nCREATE INDEX IF NOT EXISTS idx_location_tracking_location ON location_tracking USING GIST(location);\nCREATE INDEX IF NOT EXISTS idx_geofences_boundary ON geofences USING GIST(boundary);\nCREATE INDEX IF NOT EXISTS idx_time_entries_employee ON time_entries(employee_id);\nCREATE INDEX IF NOT EXISTS idx_time_entries_date ON time_entries(clock_in);\nCREATE INDEX IF NOT EXISTS idx_cost_entries_company ON cost_entries(company_id);\nCREATE INDEX IF NOT EXISTS idx_cost_entries_date ON cost_entries(date);\nCREATE INDEX IF NOT EXISTS idx_pavement_scans_location ON pavement_scans USING GIST(scan_location);\nCREATE INDEX IF NOT EXISTS idx_defects_scan ON defects(scan_id);\nCREATE INDEX IF NOT EXISTS idx_defects_location ON defects USING GIST(location);\nCREATE INDEX IF NOT EXISTS idx_audit_log_company ON audit_log(company_id);\nCREATE INDEX IF NOT EXISTS idx_audit_log_timestamp ON audit_log(timestamp);\n\n-- Add foreign key constraints\nALTER TABLE users ADD CONSTRAINT fk_users_company \n    FOREIGN KEY (company_id) REFERENCES companies(id) ON DELETE SET NULL;\n";
export declare const insertSampleDataSQL = "\n-- Insert sample company\nINSERT INTO companies (id, name, address, phone, email) VALUES \n    ('550e8400-e29b-41d4-a716-446655440001', \n     'Blacktop Solutions LLC', \n     '337 Ayers Orchard Road, Stuart, VA 24171', \n     '(276) 555-0123', \n     'info@blacktopsolutions.com')\nON CONFLICT (id) DO NOTHING;\n\n-- Insert sample admin user\nINSERT INTO users (id, email, password_hash, name, role, company_id) VALUES \n    ('550e8400-e29b-41d4-a716-446655440002',\n     'admin@blacktopsolutions.com',\n     '$2b$12$LQv3c1yqBWVHxkd0LHAkCOYz6TtxMQJqhN8/LewdBPj3pk/VpM4w2', -- password: admin123\n     'System Administrator',\n     'admin',\n     '550e8400-e29b-41d4-a716-446655440001')\nON CONFLICT (email) DO NOTHING;\n\n-- Insert sample materials from SealMaster\nINSERT INTO materials (company_id, name, category, supplier, unit_type, current_cost) VALUES \n    ('550e8400-e29b-41d4-a716-446655440001', 'SealMaster PMM Asphalt Sealer Concentrate', 'sealer', 'SealMaster', 'gallon', 3.79),\n    ('550e8400-e29b-41d4-a716-446655440001', 'Sand 50lb bag', 'aggregate', 'SealMaster', 'bag', 10.00),\n    ('550e8400-e29b-41d4-a716-446655440001', 'Prep Seal', 'primer', 'SealMaster', 'bucket', 50.00),\n    ('550e8400-e29b-41d4-a716-446655440001', 'Fast Dry', 'additive', 'SealMaster', 'bucket', 50.00),\n    ('550e8400-e29b-41d4-a716-446655440001', 'CrackMaster Crackfiller Parking Lot LP', 'crack_filler', 'SealMaster', 'box', 44.95),\n    ('550e8400-e29b-41d4-a716-446655440001', 'Propane Tank', 'fuel', 'Local Supplier', 'tank', 10.00)\nON CONFLICT DO NOTHING;\n\n-- Insert sample vehicle (1978 Chevy C30)\nINSERT INTO vehicles (company_id, name, type, make, model, year, gvwr, curb_weight, specifications) VALUES \n    ('550e8400-e29b-41d4-a716-446655440001',\n     '1978 Chevy C30 Work Truck',\n     'truck',\n     'Chevrolet',\n     'C30 Custom Deluxe',\n     1978,\n     14000.00, -- GVWR\n     4300.00,  -- Curb weight\n     '{\"engine\": \"350\", \"transmission\": \"3-speed manual\", \"fuel_capacity\": 20}'::jsonb)\nON CONFLICT DO NOTHING;\n\n-- Insert SealMaster SK 550 tank\nINSERT INTO equipment (company_id, name, type, make, model, capacity, weight, specifications) VALUES \n    ('550e8400-e29b-41d4-a716-446655440001',\n     'SealMaster SK 550 Tank Sealing Machine',\n     'sealcoating_tank',\n     'SealMaster',\n     'SK 550',\n     550.00, -- gallon capacity\n     1865.00, -- empty weight\n     '{\"unit_type\": \"skid\", \"material_weight_per_gallon\": 10, \"full_weight\": 7365}'::jsonb)\nON CONFLICT DO NOTHING;\n\n-- Insert office geofence\nINSERT INTO geofences (company_id, name, type, boundary) VALUES \n    ('550e8400-e29b-41d4-a716-446655440001',\n     'Main Office',\n     'office',\n     ST_GeogFromText('POLYGON((-80.2741 36.5962, -80.2738 36.5962, -80.2738 36.5965, -80.2741 36.5965, -80.2741 36.5962))'))\nON CONFLICT DO NOTHING;\n";
export declare const dropTablesSQL = "\nDROP TABLE IF EXISTS audit_log CASCADE;\nDROP TABLE IF EXISTS system_settings CASCADE;\nDROP TABLE IF EXISTS plugins CASCADE;\nDROP TABLE IF EXISTS reports CASCADE;\nDROP TABLE IF EXISTS defects CASCADE;\nDROP TABLE IF EXISTS pavement_scans CASCADE;\nDROP TABLE IF EXISTS weather_data CASCADE;\nDROP TABLE IF EXISTS cost_entries CASCADE;\nDROP TABLE IF EXISTS time_entries CASCADE;\nDROP TABLE IF EXISTS geofences CASCADE;\nDROP TABLE IF EXISTS location_tracking CASCADE;\nDROP TABLE IF EXISTS inventory CASCADE;\nDROP TABLE IF EXISTS materials CASCADE;\nDROP TABLE IF EXISTS equipment CASCADE;\nDROP TABLE IF EXISTS vehicles CASCADE;\nDROP TABLE IF EXISTS employees CASCADE;\nDROP TABLE IF EXISTS companies CASCADE;\nDROP TABLE IF EXISTS users CASCADE;\n";
//# sourceMappingURL=schema.d.ts.map